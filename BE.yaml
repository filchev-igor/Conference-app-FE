openapi: 3.0.0
info:
  title: Conference Management API
  description: API for managing conferences and user accounts
  version: "1.0.0"
servers:
  - url: https://localhost:8000/api
    description: Local development server

paths:
  /login:
    post:
      summary: User Login
      description: Authenticates a user and returns an access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                  description: The user's email address.
                password:
                  type: string
                  format: password
                  example: password
                  description: The user's password.
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Bearer token to use in authenticated requests.
                  token_type:
                    type: string
                    example: Bearer
                    description: Type of token returned.
                  user_id:
                    type: string
                    example: 1
                    description: User id returned
        '401':
          description: Invalid login credentials

  /conferences:
    get:
      summary: Get list of conferences
      description: Returns a list of all scheduled conferences
      responses:
        '200':
          description: List of conferences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conference'
    post:
      summary: Create a new conference
      description: Admin creates a new conference
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conference'
      responses:
        '201':
          description: Conference successfully created

  /conferences/{id}:
    get:
      summary: Get conference details
      description: Returns details of a specific conference by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Conference details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
    put:
      summary: Update conference
      description: Update details of an existing conference
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conference'
      responses:
        '200':
          description: Conference successfully updated
    delete:
      summary: Delete conference
      description: Delete a conference by its ID (not applicable for past conferences)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Conference successfully deleted

  /users:
    get:
      summary: Get list of users
      description: Returns a list of all users in the system
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get user details
      description: Retrieve details of a specific user by their ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      summary: Update user information
      description: Update user details (name, email, password)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User successfully updated

components:
  schemas:
    Conference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Conference name
        description:
          type: string
          description: Conference description
        date:
          type: string
          format: date
          description: Conference date
        time:
          type: string
          format: time
          description: Conference time
        location:
          type: string
          description: Conference location

    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: User's name
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password (required to be at least 6 characters long)
